apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubetask-frontend
  namespace: kubetask
  labels:
    app: kubetask
    component: frontend
    version: v1.0.0
    platform: gcp
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: kubetask
      component: frontend
  template:
    metadata:
      labels:
        app: kubetask
        component: frontend
        version: v1.0.0
        platform: gcp
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "80"
        prometheus.io/path: "/nginx-health"
    spec:
      serviceAccountName: kubetask-frontend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx user
        fsGroup: 101
      containers:
      - name: frontend
        # Update this with your Google Container Registry or Artifact Registry image
        image: abraiz/frontend:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        env:
        - name: VITE_API_URL
          valueFrom:
            configMapKeyRef:
              name: kubetask-config
              key: VITE_API_URL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: kubetask-config
              key: NODE_ENV
        
        # Health checks
        livenessProbe:
          httpGet:
            path: /nginx-health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /nginx-health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Resource limits
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        
        # Security context
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
            add:
            - NET_BIND_SERVICE
        
        # Volume mounts
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: nginx-log
          mountPath: /var/log/nginx
      
      volumes:
      - name: nginx-config
        configMap:
          name: kubetask-nginx-config
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-log
        emptyDir: {}
      
      # Pod anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kubetask
                - key: component
                  operator: In
                  values:
                  - frontend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: kubetask-frontend
  namespace: kubetask
  labels:
    app: kubetask
    component: frontend
    platform: gcp
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  selector:
    app: kubetask
    component: frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubetask-frontend-sa
  namespace: kubetask
  labels:
    app: kubetask
    component: frontend
    platform: gcp
  annotations:
    # Workload Identity annotation (if using Workload Identity)
    iam.gke.io/gcp-service-account: kubetask-frontend@n8n-workflow-461719.iam.gserviceaccount.com
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: kubetask-frontend-pdb
  namespace: kubetask
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: kubetask
      component: frontend
